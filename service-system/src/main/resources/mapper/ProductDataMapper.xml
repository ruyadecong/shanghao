<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xcc.system.mapper.ProductDataMapper">

    <resultMap id="productMap" type="com.xcc.model.product.ProductData" autoMapping="true"></resultMap>

    <!--//条件分页查询
    IPage<ProductData> selectPage(Page<ProductData> pageParam, @Param("vo") ProductVo vo);-->
    <select id="selectPage" resultMap="productMap">
        SELECT id,product_name,product_code,product_number,only_export,shelf_life,net_weight,weight_model,unit,executive_standard,
               filing_number,filing_person,product_introduction,usage_method,product_note,mark_one,mark_two,
               mark_three,is_confirm,version_no,update_reason,remark,STATUS,create_time,update_time,is_deleted
        FROM product_data
        <where>
            <if test="vo.productCode != null and vo.productCode != ''">
                and product_code LIKE CONCAT('%',#{vo.productCode},'%')
            </if>
            <if test="vo.searchModel != null and vo.searchModel != ''">
                and only_export = #{vo.onlyExport}
            </if>
            <if test="vo.executiveStandard != null and vo.executiveStandard != ''">
                and executive_standard LIKE CONCAT('%',#{vo.executiveStandard},'%')
            </if>
            <if test="vo.filingNumber != null and vo.filingNumber != ''">
                and filing_number LIKE CONCAT('%',#{vo.filingNumber},'%')
            </if>
                and is_deleted = 0 and status = 1
        </where>
        order by create_time desc
    </select>



    <!--//根据产品编码从product_data表中获取记录
    List<ProductData> getByProductCode(@Param("productCode") String productCode);-->
    <select id="getByProductCode" resultMap="productMap">
        SELECT id,product_name,product_code,product_number,only_export,shelf_life,net_weight,unit,executive_standard,
               filing_number,filing_person,product_introduction,usage_method,product_note,mark_one,mark_two,mark_three,
               is_confirm,version_no,update_reason,remark,STATUS,create_time,update_time,is_deleted
        FROM product_data
        WHERE product_code = #{productCode} AND is_deleted = 0
        ORDER BY create_time DESC
    </select>


    <!--//分页获取产品组件数据
    IPage<ProductData> selectPageForComposition(Page<ProductData> pageParam,@Param("vo") ProductVo vo);-->
    <select id="selectPageForComposition" resultType="com.xcc.model.product.ProductData">
        SELECT 	pd.id,pd.product_code,pd.product_name,pd.only_export,pd.shelf_life,pd.net_weight,pd.weight_model,
                  pd.unit,pd.is_confirm,pd.version_no,pd.remark,pd.create_time,pd.update_time,pd.is_deleted,
                (COUNT(pc.product_id) - SUM(pc.is_deleted)) composition_number
        FROM product_data pd LEFT JOIN product_composition pc ON pd.`id` = pc.`product_id`
        <where>
            <if test="vo.productCode != null and vo.productCode != ''">
                and pd.product_code LIKE CONCAT('%',#{vo.productCode},'%')
            </if>
            <if test="vo.compositionStatus != null and vo.compositionStatus == '缺少组件'">
                AND pd.id NOT IN (SELECT DISTINCT product_id FROM product_composition WHERE is_deleted = 0)
            </if>
            <if test="vo.compositionStatus != null and vo.compositionStatus == '已经有组件'">
                AND pd.id IN (SELECT DISTINCT product_id FROM product_composition WHERE is_deleted = 0)
            </if>
            and pd.is_deleted = 0
        </where>
        GROUP BY pd.id
        order by pd.product_code
    </select>
</mapper>
